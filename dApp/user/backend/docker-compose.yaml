version: "3.6"

x-defaults: &defaults
  restart: always
  env_file: .env
  # image: raidennetwork/raiden-services:stable
  image: raidennetwork/raiden-services:v0.13.2
  volumes:
    - ../raiden-pfs/:/raiden
    - raidenPfsData:/root/.raiden
  #logging:
  #driver: "journald"

services:
  hasura-actions:
    build: ./hasura-actions
    container_name: hactions
    volumes:
      [
        "./hasura-actions/src:/app/src",
        "./hasura-actions/node_modules:/app/node_modules",
      ]
    ports:
      - "${ACTIONS_PORT_EXTERNAL}:${ACTIONS_PORT}"
    environment:
      PORT: ${ACTIONS_PORT}
      GRAPHQL_ENDPOINT: graphql-engine:8080/v1/graphql
      HUB_ADDRESS: ${HUB_ADDRESS}
    command: ${ACTIONS_START_COMMAND}
    restart: always

  postgres:
    # container_name: hasura-postgres
    image: postgres:12
    restart: always
    ports:
      - "${POSTGRES_EXTERNAL_PORT}:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

  graphql-engine:
    # name: graphql-engine
    container_name: graphql-engine
    image: hasura/graphql-engine:v1.3.3
    ports:
      - "${HASURA_EXTERNAL_PORT}:8080"
    volumes:
      - ./hasura/migrations:/hasura-migrations
    depends_on:
      - "postgres"
      - "hasura-actions"
    restart: always
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:${POSTGRES_PASSWORD}@postgres:5432/postgres
      HASURA_GRAPHQL_ENABLE_CONSOLE: ${HASURA_GRAPHQL_ENABLE_CONSOLE}
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      HASURA_GRAPHQL_NO_OF_RETRIES: 10
      HASURA_GRAPHQL_ADMIN_SECRET: ${HASURA_GRAPHQL_ADMIN_SECRET}
      HASURA_GRAPHQL_AUTH_HOOK: http://hasura-actions:${ACTIONS_PORT}/auth
      HASURA_GRAPHQL_AUTH_HOOK_MODE: POST
      # HASURA_GRAPHQL_UNAUTHORIZED_ROLE: public
      # HASURA_GRAPHQL_JWT_SECRET: ${HASURA_GRAPHQL_JWT_SECRET}

  raiden1:
    image: ${RAIDEN_NODE_VERSION:-raidennetwork/raiden:latest}
    container_name: raiden1
    restart: unless-stopped
    command: --address "${NODE1_ETH_ADDRESS}" --keystore-path /raiden/keystore --password-file /raiden/password.txt --eth-rpc-endpoint "${ETH_RPC_ENDPIONT}" --network-id goerli --environment-type development --api-address "0.0.0.0:5001" --matrix-server "https://transport.transport01.raiden.network" --accept-disclaimer
    ports:
      - "5001:5001"
    volumes:
      - ./raiden-node/:/raiden
      - raiden1Data:/root/.raiden
    networks:
      - default

volumes:
  db_data:
  data_dir:
  raiden1Data:
